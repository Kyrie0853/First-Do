//头文件
#pragma once
#include <stdio.h>
#include <time.h>
#include <stdlib.h>

#define ROW 9
#define COL 9

#define ROWS (ROW + 2)
#define COLS (COL + 2)

#define Count 10

void InitBoard(char board[ROWS][COLS],int rows,int cols ,char set);
void DisplayBoard(char board[ROWS][COLS], int row, int col);
void SetMine(char board[ROWS][COLS], int row, int col);
void FindMine(char mine[ROWS][COLS],char show[ROWS][COLS],int row,int col);
//game.c
#define _CRT_SECURE_NO_WARNINGS
#include "game.h"

void InitBoard(char board[ROWS][COLS],int rows,int cols, char set) {
    int i, j;
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            board[i][j] = set;
        }
    }
}

void DisplayBoard(char board[ROWS][COLS], int row, int col) {
    int i, j;
    printf("***  扫雷游戏  ***\n");
    for (j=0;j<=col;j++) {
        printf("%d ", j);
    }
    printf("\n");
    for (i = 1; i < row + 1; i++) {
        printf("%d ", i);
        for (j = 1; j < col + 1; j++) {
            printf("%c ", board[i][j]); 
        }
        printf("\n");
    }printf("\n\n\n");
}
void SetMine(char board[ROWS][COLS], int row, int col) {
    int count = Count;
    while (count) {
        int x = rand() % row + 1;
        int y = rand() % col + 1;
        if (board[x][y] == '0') {
            board[x][y] = '1';
            count--;
        }
    }
}
int get_mine_count(char board[ROWS][COLS], int x, int y) {
    return board[x - 1][y] +
        board[x - 1][y - 1] +
        board[x][y - 1] +
        board[x + 1][y] +
        board[x + 1][y - 1] +
        board[x + 1][y + 1] +
        board[x - 1][y + 1] +
        board[x][y + 1] - 8 * '0';
}
void FindMine(char mine[ROWS][COLS], char show[ROWS][COLS], int row, int col) {
    int x = 0;
    int y = 0;
    while (1) {
    printf("请输入要扫的坐标：>");
    scanf("%d%d", &x, &y);
        if (x >= 1 && x <= row && y >= 1 && y <= col) {
            if (mine[x][y] == '1') {
                printf("被炸死了！\n");
                DisplayBoard(mine, ROW, COL);
                break;
            }
            else {
                int count = get_mine_count(mine, x, y);
                show[x][y] = count + '0';
                DisplayBoard(show, ROW, COL);
            }
        }
        else {
            printf("输入的坐标无效，请重新输入！");
        }
    }
}
//test.c
#define _CRT_SECURE_NO_WARNINGS

#include "game.h"

void menu() {
    printf("********   扫雷   ******\n");
    printf("******  1.game  ********\n");
    printf("******  2.exit  ********\n");
    printf("************************\n");
}

void game() {
    char mine[ROWS][COLS] = { 0 };
    char show[ROWS][COLS] = { 0 };
    InitBoard(mine,ROWS,COLS ,'0');
    InitBoard(show, ROWS, COLS , '*');
    SetMine(mine, ROW, COL);
    DisplayBoard(show, ROW, COL);
    FindMine(mine, show, ROW, COL);
}

int main() {
    int input = 0;
    srand((unsigned int) time(NULL));
    do {
        menu();
        printf("请选择> \n");
        scanf("%d%*c", &input);
        switch (input) {
        case 1:
            printf("开始扫雷！\n");
            game();
            break;
        case 2:
            printf("退出游戏！\n");
            break;
        default:
            printf("选择错误！\n");
            break;
        }
    } while (1);

    return 0;
}
